#!/bin/bash
# 2019/03/31, Grace
# 
# Input:
#   1. #_x.xyz
#   2. #_TS2_F.xyz
#   3. #_TS2_R.xyz

NAtoms=$(head -n 1 $1)

function purpose(){
    # $1 = name of output file
    cat << EOF

    output: $1 

EOF
}

function get1Dcoord(){
    # $1 = a serious of structures
    # output: name.$1 
    rm -f name.$1 
    totline=$(wc -l $1 | awk '{print $1}')
    jobline=$(( $NAtoms+2 ))
    njobs=$(( $totline/$jobline ))
    for (( i=0;i<=$(( $njobs-1 ));i++ ))
    do
        line=$(( 2+$i*$jobline ))
        coord=$( sed -n "$line,$line p" $1 \
            | sed 's/n/-/g')
        echo $coord >> name.$1 
    done
}

function main(){
    output='original.coord'
    purpose $output
    # 1. get the x and y coordinate
        get1Dcoord $1 name.$1
        # Forward
        get1Dcoord $2 name.$2
        # Reverse
        get1Dcoord $3 name.$3
        Yjob=$(wc -l name.$3 | awk '{print $1}')
        tail -n $(( $Yjob-1 )) name.$3 | awk '{print -$1}' > tmp
        mv tmp name.$3
    # 2. generate 2D name 
        Xjob=$(wc -l name.$1 | awk '{print $1}')
        rm -f $output
        for (( x=1;x<=$Xjob;x++))
        do
            xCoord=$(sed -n "$x,$x p" name.$1)
            # Forward
            for (( y=1;y<=$Yjob;y++))
            do
                yCoord=$(sed -n "$y,$y p" name.$2)
                echo $xCoord $yCoord >> $output
            done
            # Reverse 
            for (( y=1;y<=$(( $Yjob-1 )) ;y++))
            do
                yCoord=$(sed -n "$y,$y p" name.$3)
                echo $xCoord $yCoord >> $output
            done
        done
        sort -n -k 1 -k 2 $output > tmp  
        mv tmp $output 
}

main $1 $2 $3